/* tslint:disable */
/* eslint-disable */
/**
 * Mailing app
 * my api
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DsUser } from './DsUser';
import {
    DsUserFromJSON,
    DsUserFromJSONTyped,
    DsUserToJSON,
    DsUserToJSONTyped,
} from './DsUser';

/**
 * 
 * @export
 * @interface DsMessage
 */
export interface DsMessage {
    /**
     * 
     * @type {DsUser}
     * @memberof DsMessage
     */
    creator?: DsUser;
    /**
     * 
     * @type {number}
     * @memberof DsMessage
     */
    creatorID?: number;
    /**
     * 
     * @type {string}
     * @memberof DsMessage
     */
    dateCreate?: string;
    /**
     * 
     * @type {string}
     * @memberof DsMessage
     */
    dateFinish?: string;
    /**
     * 
     * @type {string}
     * @memberof DsMessage
     */
    dateUpdate?: string;
    /**
     * 
     * @type {number}
     * @memberof DsMessage
     */
    id?: number;
    /**
     * 
     * @type {DsUser}
     * @memberof DsMessage
     */
    moderator?: DsUser;
    /**
     * 
     * @type {number}
     * @memberof DsMessage
     */
    moderatorID?: number;
    /**
     * 
     * @type {string}
     * @memberof DsMessage
     */
    status?: string;
    /**
     * 
     * @type {string}
     * @memberof DsMessage
     */
    text?: string;
}

/**
 * Check if a given object implements the DsMessage interface.
 */
export function instanceOfDsMessage(value: object): value is DsMessage {
    return true;
}

export function DsMessageFromJSON(json: any): DsMessage {
    return DsMessageFromJSONTyped(json, false);
}

export function DsMessageFromJSONTyped(json: any, ignoreDiscriminator: boolean): DsMessage {
    if (json == null) {
        return json;
    }
    return {
        
        'creator': json['creator'] == null ? undefined : DsUserFromJSON(json['creator']),
        'creatorID': json['creatorID'] == null ? undefined : json['creatorID'],
        'dateCreate': json['dateCreate'] == null ? undefined : json['dateCreate'],
        'dateFinish': json['dateFinish'] == null ? undefined : json['dateFinish'],
        'dateUpdate': json['dateUpdate'] == null ? undefined : json['dateUpdate'],
        'id': json['id'] == null ? undefined : json['id'],
        'moderator': json['moderator'] == null ? undefined : DsUserFromJSON(json['moderator']),
        'moderatorID': json['moderatorID'] == null ? undefined : json['moderatorID'],
        'status': json['status'] == null ? undefined : json['status'],
        'text': json['text'] == null ? undefined : json['text'],
    };
}

export function DsMessageToJSON(json: any): DsMessage {
    return DsMessageToJSONTyped(json, false);
}

export function DsMessageToJSONTyped(value?: DsMessage | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'creator': DsUserToJSON(value['creator']),
        'creatorID': value['creatorID'],
        'dateCreate': value['dateCreate'],
        'dateFinish': value['dateFinish'],
        'dateUpdate': value['dateUpdate'],
        'id': value['id'],
        'moderator': DsUserToJSON(value['moderator']),
        'moderatorID': value['moderatorID'],
        'status': value['status'],
        'text': value['text'],
    };
}

